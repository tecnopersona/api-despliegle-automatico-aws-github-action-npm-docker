name: Deploy to AWS ECR and App Runner

on:
  push:
    branches: [ "main" ]

env:
  ECR_REPOSITORY: api-demo
  AWS_REGION: us-east-1
  # AÑADE TU ALIAS DE ECR PUBLIC AQUÍ
  ECR_PUBLIC_ALIAS: a8p9r5y8

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Log in to Amazon ECR Public
      uses: aws-actions/amazon-ecr-login@v1
      id: login-ecr-public
      with:
        registry-type: public

    - name: Build, tag, and push image to Amazon ECR Public
      id: build-image
      run: |
        # Construimos el nombre completo de la imagen directamente
        IMAGE_TAG=public.ecr.aws/${{ env.ECR_PUBLIC_ALIAS }}/${{ env.ECR_REPOSITORY }}:latest

        # Construimos y subimos la imagen usando el nombre completo
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy to AWS App Runner
      run: |
        aws apprunner start-deployment --service-arn ${{ secrets.AWS_APPRUNNER_ARN }}